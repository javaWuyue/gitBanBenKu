package com.ssm.controller;

import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.ssm.pojo.BaseDict;
import com.ssm.pojo.Customer;
import com.ssm.pojo.vo.QueryVo;
import com.ssm.service.CustomerService;


@Controller
@RequestMapping("/customer")
public class CustomerController {
			
	@Autowired
	private CustomerService customerService;
	
	@Value("${customer.dict.source}")
	private String source;
	@Value("${customer.dict.industry}")
	private String industry;
	@Value("${customer.dict.level}")
	private String level;
	
	
	@RequestMapping("/list")
	public String list(QueryVo vo, Model model) throws Exception{
		//客户来源下拉
		List<BaseDict> sourceList = customerService.findDictByCode(source);
		
		//客户行业
		List<BaseDict> industryList = customerService.findDictByCode(industry);
		//客户级别
		List<BaseDict> levelList = customerService.findDictByCode(level);
		
		//转码
		if(vo.getCustName() != null){
			vo.setCustName(new String(vo.getCustName().getBytes("iso8859-1") , "utf-8"));
		}
		
		vo.setStart((vo.getPage() - 1) * vo.getSize());
		
		//查询结果列表
		List<Customer> resultList = customerService.findCustomerByVo(vo);
		//查询结果总数
		Integer count = customerService.findCustomerByVoCount(vo);
		
		Page<Customer> page = new Page<Customer>();
		//当前页
		page.setPage(vo.getPage());
		//返回数据记录
		page.setRows(resultList);
		//每页显示多少条数据
		page.setSize(vo.getSize());
		//数据总数
		page.setTotal(count);
		
		//高级查询下拉列表数据
		model.addAttribute("fromType", sourceList);
		model.addAttribute("industryType", industryList);
		model.addAttribute("levelType", levelList);
		
		//下拉列表数据选中回显
		model.addAttribute("custName", vo.getCustName());
		model.addAttribute("custSource", vo.getCustSource());
		model.addAttribute("custIndustry", vo.getCustIndustry());
		model.addAttribute("custLevel", vo.getCustLevel());
		
		model.addAttribute("page", page);
		return "customer";
	}
	
	@RequestMapping("/detail")
	@ResponseBody
	public Customer detail(Long id) throws Exception{
		Customer customer = customerService.findCustomerById(id);
		return customer;
	}
	
	@RequestMapping("/update")
	public String update(Customer customer) throws Exception{
		customerService.updateCustomerById(customer);
		return "success";
	}
	
	@RequestMapping("/delete")
	public String del(Long id) throws Exception{
		customerService.deleteCustomerById(id);
		return "success";
	}
	
	
}
